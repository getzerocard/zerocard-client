import React from 'react';
import { View, Text, StyleSheet, TouchableOpacity } from 'react-native';
import { SvgXml } from 'react-native-svg';
import { router } from 'expo-router';

interface CardControlsProps {
  onLoadCard?: () => void;
  onFreezeCard?: () => void;
}

// SVG icons as strings - now using the icon files from assets
const loadCardSvg = `<svg xmlns="http://www.w3.org/2000/svg" xml:space="preserve" enable-background="new 0 0 24 24" viewBox="0 0 24 24" id="deposit">
  <g id="_icons">
    <g>
      <path d="M12.70703,9.45557c-0.39062-0.39062-1.02344-0.39062-1.41406,0l-2,2c-0.39062,0.39062-0.39062,1.02344,0,1.41406
			s1.02344,0.39062,1.41406,0L11,12.57666V16c0,0.55225,0.44775,1,1,1s1-0.44775,1-1v-3.42334l0.29297,0.29297
			C13.48828,13.06494,13.74414,13.1626,14,13.1626s0.51172-0.09766,0.70703-0.29297c0.39062-0.39062,0.39062-1.02344,0-1.41406
			L12.70703,9.45557z"></path>
      <path d="M4.10474,9.85339c-0.21106,2.6593-0.0506,5.323,0.51782,7.92786c0.36377,1.68018,1.51953,3.02832,3.02002,3.52051
			C9.07715,21.76514,10.54297,22,12,22s2.92285-0.23486,4.36133-0.69971c1.49658-0.49072,2.65234-1.83887,3.01562-3.51709
			C19.79053,15.8916,20,13.9458,20,12c0-0.71716-0.03821-1.43658-0.09497-2.15179C21.16675,9.20331,22,7.95764,22,6.58008V6.02002
			c0-0.92188-0.36865-1.81396-1.05273-2.52686C20.2749,2.8208,19.37793,2.40234,18.4292,2.31494
			c-4.20117-0.41797-8.6582-0.41797-12.85742,0C3.53564,2.51562,2,4.1084,2,6.02002v0.56006
			C2,7.50195,2.36865,8.39404,3.0625,9.1167C3.37158,9.4173,3.72626,9.66083,4.10474,9.85339z M17.42236,17.3584
			c-0.21387,0.98877-0.85938,1.771-1.68018,2.04004c-2.4707,0.79883-5.01758,0.79736-7.48047,0.00146
			c-0.82471-0.27051-1.47021-1.05273-1.68457-2.04346C6,14.7124,5.85449,12.00391,6.14404,9.30713
			C6.22754,8.53076,6.34668,7.76074,6.50146,7h10.99707c0.15332,0.75195,0.27344,1.52637,0.35742,2.30713
			C17.95166,10.1958,18,11.10156,18,12C18,13.80225,17.80566,15.60449,17.42236,17.3584z M4,6.02002
			C4,5.1416,4.76025,4.40479,5.76904,4.30518C7.8042,4.10254,9.90039,4,12,4s4.1958,0.10254,6.23877,0.30566
			c0.49219,0.04541,0.95166,0.25879,1.27979,0.58691C19.73828,5.12158,20,5.50293,20,6.02002v0.56006
			c0,0.35938-0.1333,0.70264-0.36328,0.98779c-0.07471-0.45312-0.16064-0.89893-0.25586-1.33203
			c-0.03955-0.19922-0.09229-0.38477-0.1582-0.5708C19.08105,5.2666,18.70361,5,18.28027,5H5.71973
			C5.29639,5,4.91895,5.2666,4.77734,5.66504C4.71143,5.85107,4.65869,6.03662,4.62354,6.21533
			C4.52539,6.66064,4.43848,7.11377,4.36279,7.57227C4.17725,7.33984,4,7.00586,4,6.58008V6.02002z"></path>
    </g>
  </g>
</svg>`;

const withdrawCardSvg = `<svg xmlns="http://www.w3.org/2000/svg" xml:space="preserve" enable-background="new 0 0 24 24" viewBox="0 0 24 24" id="cash-out">
  <g id="_icons">
    <g>
      <path d="M4.10474,9.85339c-0.21106,2.6593-0.0506,5.323,0.51782,7.92786c0.36377,1.68018,1.51953,3.02832,3.02002,3.52051
			C9.07715,21.76514,10.54297,22,12,22s2.92285-0.23486,4.36133-0.69971c1.49658-0.49072,2.65234-1.83887,3.01562-3.51709
			C19.79053,15.8916,20,13.9458,20,12c0-0.71716-0.03821-1.43658-0.09497-2.15179C21.16675,9.20331,22,7.95764,22,6.58008V6.02002
			c0-0.92188-0.36865-1.81396-1.05273-2.52686C20.2749,2.8208,19.37793,2.40234,18.4292,2.31494
			c-4.20117-0.41797-8.6582-0.41797-12.85742,0C3.53564,2.51562,2,4.1084,2,6.02002v0.56006
			C2,7.50195,2.36865,8.39404,3.0625,9.1167C3.37158,9.4173,3.72626,9.66083,4.10474,9.85339z M17.42236,17.3584
			c-0.21387,0.98877-0.85938,1.771-1.68018,2.04004c-2.4707,0.79883-5.01758,0.79736-7.48047,0.00146
			c-0.82471-0.27051-1.47021-1.05273-1.68457-2.04346C6,14.7124,5.85449,12.00391,6.14404,9.30713
			C6.22754,8.53076,6.34668,7.76074,6.50146,7h10.99707c0.15332,0.75195,0.27344,1.52637,0.35742,2.30713
			C17.95166,10.1958,18,11.10156,18,12C18,13.80225,17.80566,15.60449,17.42236,17.3584z M4,6.02002
			C4,5.1416,4.76025,4.40479,5.76904,4.30518C7.8042,4.10254,9.90039,4,12,4s4.1958,0.10254,6.23877,0.30566
			c0.49219,0.04541,0.95166,0.25879,1.27979,0.58691C19.73828,5.12158,20,5.50293,20,6.02002v0.56006
			c0,0.35938-0.1333,0.70264-0.36328,0.98779c-0.07471-0.45312-0.16064-0.89893-0.25586-1.33203
			c-0.03955-0.19922-0.09229-0.38477-0.1582-0.5708C19.08105,5.2666,18.70361,5,18.28027,5H5.71973
			C5.29639,5,4.91895,5.2666,4.77734,5.66504C4.71143,5.85107,4.65869,6.03662,4.62354,6.21533
			C4.52539,6.66064,4.43848,7.11377,4.36279,7.57227C4.17725,7.33984,4,7.00586,4,6.58008V6.02002z" fill="#c9252d"></path>
      <path d="M13.29297,13.29297L13,13.58594V10.1626c0-0.55225-0.44775-1-1-1s-1,0.44775-1,1v3.42334l-0.29297-0.29297
			c-0.39062-0.39062-1.02344-0.39062-1.41406,0s-0.39062,1.02344,0,1.41406l2,2C11.48828,16.90234,11.74414,17,12,17
			s0.51172-0.09766,0.70703-0.29297l2-2c0.39062-0.39062,0.39062-1.02344,0-1.41406S13.68359,12.90234,13.29297,13.29297z" fill="#c9252d"></path>
    </g>
  </g>
</svg>`;

const freezeIconSvg = `<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0_197_587)">
<path d="M22.1668 12.7021L17.8017 13.8711L16.1191 12.9005V11.079L17.7824 10.1239L22.1667 11.2986C22.2548 11.3221 22.3434 11.3337 22.4311 11.3337C22.8815 11.3337 23.2936 11.033 23.4153 10.5774C23.5611 10.033 23.2383 9.4735 22.694 9.32781L20.2904 8.68381L22.5061 7.41171C22.9945 7.13121 23.1635 6.50768 22.883 6.01911C22.6015 5.53054 21.9792 5.36127 21.4906 5.64244L19.2703 6.91755L19.9142 4.51319C20.0599 3.96892 19.7376 3.40932 19.1929 3.26363C18.6519 3.12172 18.0901 3.44092 17.9443 3.98483L16.7744 8.35015L15.1006 9.31139L13.5139 8.39398V6.46903L16.7226 3.26042C17.1209 2.86189 17.1209 2.21639 16.7226 1.81781C16.3241 1.41934 15.6788 1.41934 15.2801 1.81781L13.5139 3.58392V1.02004C13.514 0.456759 13.0571 0 12.4938 0C11.9305 0 11.4737 0.456707 11.4737 1.02004V3.57128L9.72041 1.81781C9.32194 1.41934 8.67644 1.41934 8.27786 1.81781C7.87939 2.21634 7.87939 2.86184 8.27786 3.26042L11.4737 6.45623V8.40139L9.89905 9.30983L8.22527 8.34948L7.05623 3.98488C6.91059 3.44098 6.35145 3.12089 5.8076 3.26368C5.26328 3.40937 4.94025 3.96897 5.08609 4.51324L5.72989 6.91718L3.50971 5.64244C3.02026 5.36122 2.39724 5.53012 2.11716 6.01936C1.83681 6.50804 2.00587 7.13116 2.49439 7.41166L4.7099 8.68376L2.30632 9.32776C1.76195 9.47345 1.43901 10.0329 1.58481 10.5774C1.70682 11.0329 2.11882 11.3337 2.5692 11.3337C2.65692 11.3337 2.74551 11.3221 2.8339 11.2986L7.2187 10.1234L8.88021 11.0773L8.88192 12.9004L7.19881 13.8728L2.8339 12.702C2.29336 12.5601 1.73081 12.8797 1.58481 13.4234C1.43901 13.9676 1.76195 14.5273 2.30632 14.6722L4.70109 15.3145L2.49185 16.5898C2.00416 16.8717 1.83681 17.4951 2.11887 17.9828C2.30782 18.3111 2.6506 18.4928 3.00275 18.4928C3.17564 18.4928 3.35112 18.4498 3.51189 18.3557L5.73232 17.0744L5.08609 19.4875C4.94025 20.0327 5.26328 20.5906 5.8076 20.7371C5.89573 20.761 5.98427 20.7723 6.07204 20.7723C6.52222 20.7723 6.93421 20.4711 7.05623 20.0152L8.23108 15.6318L9.90206 14.6677L11.4737 15.5746V17.5447L8.27786 20.7406C7.87939 21.139 7.87939 21.7844 8.27786 22.1831C8.47712 22.3823 8.73768 22.4811 8.99911 22.4811C9.25966 22.4811 9.52115 22.3823 9.72041 22.1831L11.4737 20.4297V22.9801C11.4737 23.5444 11.9305 24.0002 12.4938 24.0002C13.0571 24.0002 13.514 23.5443 13.514 22.9801V20.417L15.2801 22.1831C15.4793 22.3823 15.7399 22.4811 16.0014 22.4811C16.2629 22.4811 16.5234 22.3823 16.7226 22.1831C17.1209 21.7845 17.1209 21.1391 16.7226 20.7406L13.514 17.5319V15.5824L15.0991 14.6676L16.7696 15.6317L17.9445 20.0151C18.0663 20.471 18.4783 20.7722 18.9284 20.7722C19.0159 20.7722 19.1047 20.7609 19.193 20.737C19.7377 20.5905 20.0599 20.0326 19.9143 19.4874L19.2673 17.0743L21.4886 18.3556C21.6494 18.4496 21.8248 18.4927 21.9978 18.4927C22.3499 18.4927 22.6926 18.311 22.8816 17.9827C23.1636 17.495 22.9964 16.8717 22.5086 16.5897L20.2994 15.3146L22.6941 14.6722C23.2385 14.5273 23.5613 13.9676 23.4154 13.4235C23.2704 12.8797 22.7102 12.5595 22.1668 12.7021ZM14.0789 12.9005L12.5001 13.8123L10.9225 12.9004L10.9208 11.0757L12.5001 10.1645L14.0789 11.0771V12.9005Z" fill="#7177F9"/>
</g>
<defs>
<clipPath id="clip0_197_587">
<rect width="24" height="24" fill="white" transform="translate(0.5)"/>
</clipPath>
</defs>
</svg>`;

const CardControls: React.FC<CardControlsProps> = ({ onLoadCard, onFreezeCard }) => {
  
  const handleWithdrawPress = () => {
    router.push('/withdraw-funds');
  };

  const handleLoadCardPress = () => {
    router.push('/(tab)/load-wallet');
    // Still call the onLoadCard prop if it exists
    if (onLoadCard) {
      onLoadCard();
    }
  };

  return (
    <View style={styles.container}>
      <TouchableOpacity style={styles.buttonContainer} onPress={handleLoadCardPress} activeOpacity={0.7}>
        <SvgXml xml={loadCardSvg} width={18} height={18} />
        <Text style={styles.buttonText}>Load card</Text>
      </TouchableOpacity>

      <TouchableOpacity style={styles.buttonContainer} onPress={handleWithdrawPress} activeOpacity={0.7}>
        <SvgXml xml={withdrawCardSvg} width={18} height={18} />
        <Text style={styles.buttonText}>Withdraw</Text>
      </TouchableOpacity>

      <TouchableOpacity style={styles.buttonContainer} onPress={onFreezeCard} activeOpacity={0.7}>
        <SvgXml xml={freezeIconSvg} width={16} height={16} />
        <Text style={styles.buttonText}>Freeze card</Text>
      </TouchableOpacity>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flexDirection: 'row',
    justifyContent: 'center',
    alignItems: 'center',
    gap: 8,
    alignSelf: 'stretch',
  },
  buttonContainer: {
    flexDirection: 'row',
    justifyContent: 'center',
    alignItems: 'center',
    padding: 12,
    gap: 6,
    backgroundColor: '#FFFFFF',
    shadowColor: 'rgba(0, 0, 0, 0.05)',
    shadowOffset: {
      width: 0,
      height: 1,
    },
    shadowOpacity: 1,
    shadowRadius: 1,
    elevation: 1,
    borderRadius: 1000,
  },
  buttonText: {
    fontFamily: 'SF Pro Display',
    fontWeight: '500',
    fontSize: 15,
    lineHeight: 17,
    color: '#000000',
  },
});

export default CardControls;
